$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file plotct.3m_datapac.man
NAME
   plotct(3f) - [M_datapac:STATISTICS:LINE PLOT] generate a line printer plot for
   the terminal (71 characters wide)

SYNOPSIS
    Subroutine plotct (X, Y)

     ${TYPE} (kind=${KIND}), Intent (InOut) :: X(:)
     Real, Intent (In)                      :: Y

   Where ${TYPE}(kind=${KIND}) may be

      o Real(kind=real32)
      o Real(kind=real64)
      o Integer(kind=int32)
      o Character(kind=selected_char_kind("DEFAULT"),len=*)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_plotct
   use M_datapac, only : plotct
   implicit none
   character(len=*),parameter :: g='(*(g0,1x))'
   ! call plotct(x,y)
   end program demo_plotct

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==plotct.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE PLOTCT(Y,X,Char,N)
      IMPLICIT NONE
!*--PLOTCT18703
!*** Start of declarations inserted by SPAG
      REAL aim1 , airow , anumcm , anumlm , anumr , anumrm , Char ,     &
     &     cutoff , delx , dely , hold , X , xlable , xmax , xmin ,     &
     &     xwidth , Y , ylable , ylower , ymax
      REAL ymin , yupper , ywidth
      INTEGER i , ia , icol , icolmx , ipr , irow , ixdel , N , n2 ,    &
     &        numcol , numlab , numr25 , numr50 , numr75 , numrow
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT PLOTCT
!
!     PURPOSE--THIS SUBROUTINE YIELDS A NARROW-WIDTH (71-CHARACTER)
!              PLOT OF Y(I) VERSUS X(I) WITH SPECIAL PLOTTING
!              CHARACTERS.
!              ITS NARROW WIDTH MAKES IT APPROPRIATE FOR USE ON A
!              TERMINAL.
!              THIS 'SPECIAL PLOTTING CHARACTER' CAPABILITY
!              ALLOWS THE DATA ANALYST TO INCORPORATE INFORMATION
!              FROM A THIRD VARIABLE (ASIDE FROM Y AND X) INTO
!              THE PLOT.
!              THE PLOT CHARACTER USED AT THE I-TH PLOTTING
!              POSITION (THAT IS, AT THE COORDINATE (X(I),Y(I)))
!              WILL BE
!              1 IF CHAR(I) IS BETWEEN  0.5 AND  1.5
!              2 IF CHAR(I) IS BETWEEN  1.5 AND  2.5
!                .
!                .
!                .
!              9 IF CHAR(I) IS BETWEEN  8.5 AND  9.5
!              0 IF CHAR(I) IS BETWEEN  9.5 AND 10.5
!              A IF CHAR(I) IS BETWEEN 10.5 AND 11.5
!              B IF CHAR(I) IS BETWEEN 11.5 AND 12.5
!              C IF CHAR(I) IS BETWEEN 12.5 AND 13.5
!                .
!                .
!                .
!              W IF CHAR(I) IS BETWEEN 32.5 AND 33.5
!              X IF CHAR(I) IS BETWEEN 33.5 AND 34.5
!              Y IF CHAR(I) IS BETWEEN 34.5 AND 35.5
!              Z IF CHAR(I) IS BETWEEN 35.5 AND 36.5
!              X IF CHAR(I) IS ANY VALUE OUTSIDE THE RANGE
!                                       0.5 TO  36.5.
!     INPUT ARGUMENTS--Y      = THE SINGLE PRECISION VECTOR OF
!                               (UNSORTED OR SORTED) OBSERVATIONS
!                               TO BE PLOTTED VERTICALLY.
!                    --X      = THE SINGLE PRECISION VECTOR OF
!                               (UNSORTED OR SORTED) OBSERVATIONS
!                               TO BE PLOTTED HORIZONTALLY.
!                    --CHAR   = THE SINGLE PRECISION VECTOR OF
!                               OBSERVATIONS WHICH CONTROL THE
!                               VALUE OF EACH INDIVIDUAL PLOT
!                               CHARACTER.
!                    --N      = THE INTEGER NUMBER OF OBSERVATIONS
!                               IN THE VECTOR Y.
!     OUTPUT--A NARROW-WIDTH (71-CHARACTER) TERMINAL PLOT
!             OF Y(I) VERSUS X(I) WITH SPECIAL PLOT CHARACTERS.
!             THE BODY OF THE PLOT (NOT COUNTING AXIS VALUES
!             AND MARGINS) IS 25 ROWS (LINES) AND 49 COLUMNS.
!     PRINTING--YES.
!     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
!                   OF N FOR THIS SUBROUTINE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     COMMENT--VALUES IN THE VERTICAL AXIS VECTOR (Y),
!              THE HORIZONTAL AXIS VECTOR (X),
!              OR THE PLOT CHARACTER VECTOR (CHAR) WHICH ARE
!              EQUAL TO OR IN EXCESS OF 10.0**10 WILL NOT BE
!              PLOTTED.
!              THIS CONVENTION GREATLY SIMPLIFIES THE PROBLEM
!              OF PLOTTING WHEN SOME ELEMENTS IN THE VECTOR Y
!              (OR X, OR CHAR) ARE 'MISSING DATA', OR WHEN WE PURPOSELY
!              WANT TO IGNORE CERTAIN ELEMENTS IN THE VECTOR Y
!              (OR X, OR CHAR) FOR PLOTTING PURPOSES (THAT IS, WE DO NOT
!              WANT CERTAIN ELEMENTS IN Y (OR X, OR CHAR) TO BE
!              PLOTTED).
!              TO CAUSE SPECIFIC ELEMENTS IN Y (OR X, OR CHAR) TO BE
!              IGNORED, WE REPLACE THE ELEMENTS BEFOREHAND
!              (BY, FOR EXAMPLE, USE OF THE   REPLAC   SUBROUTINE)
!              BY SOME LARGE VALUE (LIKE, SAY, 10.0**10) AND
!              THEY WILL SUBSEQUENTLY BE IGNORED IN THE PLOTC
!              SUBROUTINE.
!            --NOTE THAT THE STORAGE REQUIREMENTS FOR THIS
!              (AND THE OTHER) TERMINAL PLOT SUBROUTINESS ARE .
!              VERY SMALL.
!              THIS IS DUE TO THE 'ONE LINE AT A TIME' ALGORITHM
!              EMPLOYED FOR THE PLOT.
!     REFERENCES--FILLIBEN, 'STATISTICAL ANALYSIS OF INTERLAB
!                 FATIGUE TIME DATA', UNPUBLISHED MANUSCRIPT
!                 (AVAILABLE FROM AUTHOR)
!                 PRESENTED AT THE 'COMPUTER-ASSISTED DATA
!                 ANALYSIS' SESSION AT THE NATIONAL MEETING
!                 OF THE AMERICAN STATISTICAL ASSOCIATION,
!                 NEW YORK CITY, DECEMBER 27-30, 1973.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE--301-921-2315
!     ORIGINAL VERSION--FEBRUARY  1974.
!     UPDATED         --APRIL     1974.
!     UPDATED         --OCTOBER   1974.
!     UPDATED         --OCTOBER   1975.
!     UPDATED         --NOVEMBER  1975.
!     UPDATED         --FEBRUARY  1977.
!
!---------------------------------------------------------------------
!
      CHARACTER*4 iline
      CHARACTER*4 iplotc
      CHARACTER*4 jplotc
      CHARACTER*4 iaxisc
      CHARACTER*4 sbnam1 , sbnam2
      CHARACTER*4 alph11 , alph12 , alph21 , alph22 , alph31 , alph32
      CHARACTER*4 alph41 , alph42
      CHARACTER*4 blank , hyphen , alphai
!
      DIMENSION Y(:)
      DIMENSION X(:)
      DIMENSION Char(:)
      DIMENSION iline(72) , xlable(10)
      DIMENSION iplotc(37)
!
      DATA sbnam1 , sbnam2/'PLOT' , 'CT  '/
      DATA alph11 , alph12/'FIRS' , 'T   '/
      DATA alph21 , alph22/'SECO' , 'ND  '/
      DATA alph31 , alph32/'THIR' , 'D   '/
      DATA alph41 , alph42/'FOUR' , 'TH  '/
      DATA blank , hyphen , alphai/' ' , '-' , 'I'/
      DATA iplotc(1) , iplotc(2) , iplotc(3) , iplotc(4) , iplotc(5) ,  &
     &     iplotc(6) , iplotc(7) , iplotc(8) , iplotc(9) , iplotc(10) , &
     &     iplotc(11) , iplotc(12) , iplotc(13) , iplotc(14) ,          &
     &     iplotc(15) , iplotc(16) , iplotc(17) , iplotc(18) ,          &
     &     iplotc(19) , iplotc(20) , iplotc(21) , iplotc(22) ,          &
     &     iplotc(23) , iplotc(24) , iplotc(25) , iplotc(26) ,          &
     &     iplotc(27) , iplotc(28) , iplotc(29) , iplotc(30) ,          &
     &     iplotc(31) , iplotc(32) , iplotc(33) , iplotc(34) ,          &
     &     iplotc(35) , iplotc(36) , iplotc(37)/'1' , '2' , '3' , '4' , &
     &     '5' , '6' , '7' , '8' , '9' , '0' , 'A' , 'B' , 'C' , 'D' ,  &
     &     'E' , 'F' , 'G' , 'H' , 'I' , 'J' , 'K' , 'L' , 'M' , 'N' ,  &
     &     'O' , 'P' , 'Q' , 'R' , 'S' , 'T' , 'U' , 'V' , 'W' , 'X' ,  &
     &     'Y' , 'Z' , 'X'/
!
      ipr = 6
      cutoff = (10.0**10) - 1000.0
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (ipr,99012)
         WRITE (ipr,99013)
         WRITE (ipr,99014) alph41 , alph42 , sbnam1 , sbnam2
         WRITE (ipr,99001) N
99001    FORMAT (' ','IS NON-NEGATIVE (WITH VALUE = ',I8,')')
         WRITE (ipr,99012)
         RETURN
      ELSE
         IF ( N==1 ) THEN
            WRITE (ipr,99012)
            WRITE (ipr,99013)
            WRITE (ipr,99014) alph41 , alph42 , sbnam1 , sbnam2
            WRITE (ipr,99002) N
99002       FORMAT (' ','HAS THE VALUE 1')
            WRITE (ipr,99012)
            RETURN
         ELSE
!
            hold = Y(1)
            DO i = 2 , N
               IF ( Y(i)/=hold ) GOTO 50
            ENDDO
            WRITE (ipr,99012)
            WRITE (ipr,99013)
            WRITE (ipr,99014) alph11 , alph12 , sbnam1 , sbnam2
            WRITE (ipr,99015) hold
            WRITE (ipr,99012)
            RETURN
         ENDIF
 50      hold = X(1)
         DO i = 2 , N
            IF ( X(i)/=hold ) GOTO 100
         ENDDO
         WRITE (ipr,99012)
         WRITE (ipr,99013)
         WRITE (ipr,99014) alph21 , alph22 , sbnam1 , sbnam2
         WRITE (ipr,99015) hold
         WRITE (ipr,99012)
         RETURN
      ENDIF
 100  hold = Char(1)
      DO i = 2 , N
         IF ( Char(i)/=hold ) GOTO 200
      ENDDO
      WRITE (ipr,99012)
      WRITE (ipr,99003)
99003 FORMAT (' ','               NON-FATAL DIAGNOSTIC               ')
      WRITE (ipr,99014) alph31 , alph32 , sbnam1 , sbnam2
      WRITE (ipr,99015) hold
      WRITE (ipr,99012)
!
 200  DO i = 1 , N
         IF ( Y(i)<cutoff ) GOTO 300
      ENDDO
      WRITE (ipr,99012)
      WRITE (ipr,99013)
      WRITE (ipr,99014) alph11 , alph12 , sbnam1 , sbnam2
      WRITE (ipr,99016)
      WRITE (ipr,99017) cutoff
      WRITE (ipr,99012)
      RETURN
 300  DO i = 1 , N
         IF ( X(i)<cutoff ) GOTO 400
      ENDDO
      WRITE (ipr,99012)
      WRITE (ipr,99013)
      WRITE (ipr,99014) alph21 , alph22 , sbnam1 , sbnam2
      WRITE (ipr,99016)
      WRITE (ipr,99017) cutoff
      WRITE (ipr,99012)
      RETURN
 400  DO i = 1 , N
         IF ( Char(i)<cutoff ) GOTO 500
      ENDDO
      WRITE (ipr,99012)
      WRITE (ipr,99013)
      WRITE (ipr,99014) alph31 , alph32 , sbnam1 , sbnam2
      WRITE (ipr,99016)
      WRITE (ipr,99017) cutoff
      WRITE (ipr,99012)
      RETURN
!
 500  n2 = 0
      DO i = 1 , N
         IF ( Y(i)<cutoff .AND. X(i)<cutoff .AND. Char(i)<cutoff ) THEN
            n2 = n2 + 1
            IF ( n2>=2 ) GOTO 600
         ENDIF
      ENDDO
      WRITE (ipr,99012)
      WRITE (ipr,99013)
      WRITE (ipr,99004) alph11 , alph12 , alph21 , alph22 , alph31 ,    &
     &                  alph32
99004 FORMAT (' ','THE ',A4,A4,', ',A4,A4,', AND ',A4,A4)
      WRITE (ipr,99005) sbnam1 , sbnam2
99005 FORMAT (' ','INPUT ARGUMENTS TO THE ',A4,A4,' SUBROUTINE')
      WRITE (ipr,99006)
99006 FORMAT (' ','ARE SUCH THAT TOO MANY POINTS HAVE BEEN',            &
     &        ' EXCLUDED FROM THE PLOT.')
      WRITE (ipr,99007) n2
99007 FORMAT (' ','ONLY ',I3,' POINTS ARE LEFT TO BE PLOTTED.')
      WRITE (ipr,99012)
      RETURN
!
!-----START POINT-----------------------------------------------------
!
!     DEFINE THE NUMBER OF ROWS AND COLUMNS WITHIN THE PLOT--THIS HAS
!     BEEN SET TO 25 ROWS AND 49 COLUMNS.
!
 600  numrow = 25
      numcol = 49
      anumr = numrow
      anumrm = numrow - 1
      anumcm = numcol - 1
      numr25 = (numrow/4) + 1
      numr50 = (numrow/2) + 1
      numr75 = 3*(numrow/4) + 1
      ixdel = (numcol-1)/4
      numlab = 5
      anumlm = numlab - 1
!
!     SKIP A LINE, WRITE OUT AN IDENTIFYING LINE FOR THE TYPE OF PLOT,
!     WRITE OUT THE TOP HORIZONTAL AXIS OF THE PLOT, AND SKIP 1 LINE
!     FOR A MARGIN WITHIN THE PLOT.
!
      WRITE (ipr,99008)
99008 FORMAT (' ')
      WRITE (ipr,99009)
!
99009 FORMAT (' ','THE FOLLOWING IS A PLOT OF Y(I) VERSUS X(I)')
      DO icol = 1 , numcol
         iline(icol) = hyphen
      ENDDO
      DO icol = 1 , numcol , ixdel
         iline(icol) = alphai
      ENDDO
      WRITE (ipr,99018) (iline(i),i=1,numcol)
      WRITE (ipr,99019) blank
!
!     DETERMINE THE MIN AND MAX VALUES OF Y, AND OF X.
!
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( Char(i)<cutoff ) THEN
                  ymin = Y(i)
                  ymax = Y(i)
                  xmin = X(i)
                  xmax = X(i)
                  EXIT
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( Char(i)<cutoff ) THEN
                  IF ( Y(i)<ymin ) ymin = Y(i)
                  IF ( Y(i)>ymax ) ymax = Y(i)
                  IF ( X(i)<xmin ) xmin = X(i)
                  IF ( X(i)>xmax ) xmax = X(i)
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      dely = ymax - ymin
      delx = xmax - xmin
      ywidth = dely/anumrm
      xwidth = delx/anumcm
!
!     DETERMINE AND WRITE OUT THE PLOT POSITIONS ONE LINE AT A TIME.
!     ALSO DETERMINE THE APPROPRIATE PLOT CHARACTERS.
!
      DO irow = 1 , numrow
         DO icol = 1 , numcol
            iline(icol) = blank
         ENDDO
         airow = irow
         yupper = ymax + (1.5-airow)*ywidth
         ylable = ymax + (1.0-airow)*ywidth
         ylower = ymax + (0.5-airow)*ywidth
         IF ( irow==numrow ) ylable = ymin
         DO i = 1 , N
            IF ( Y(i)<cutoff ) THEN
               IF ( X(i)<cutoff ) THEN
                  IF ( Char(i)<cutoff ) THEN
                     IF ( ylower<=Y(i) .AND. Y(i)<yupper ) THEN
                        icol = ((X(i)-xmin)/xwidth) + 1.5
                        ia = Char(i) + 0.5
                        IF ( 1<=ia .AND. ia<=36 ) THEN
                           jplotc = iplotc(ia)
                        ELSE
                           jplotc = iplotc(37)
                        ENDIF
                        iline(icol) = jplotc
                     ENDIF
                  ENDIF
               ENDIF
            ENDIF
         ENDDO
         icolmx = 1
         DO icol = 1 , numcol
            IF ( iline(icol)/=blank ) icolmx = icol
         ENDDO
         iaxisc = alphai
         IF ( irow==1 .OR. irow==numrow ) iaxisc = hyphen
         IF ( irow==numr25 .OR. irow==numr50 .OR. irow==numr75 )        &
     &        iaxisc = hyphen
         WRITE (ipr,99010) ylable , iaxisc , (iline(icol),icol=1,icolmx)
99010    FORMAT (' ',E14.7,1X,A1,2X,50A1)
      ENDDO
!
!     SKIP 1 LINE FOR A BOTTOM MARGIN WITHIN THE PLOT, WRITE OUT THE
!     BOTTOM HORIZONTAL AXIS, AND WRITE OUT THE X AXIS LABLES.
!
      WRITE (ipr,99019) blank
      DO icol = 1 , numcol
         iline(icol) = hyphen
      ENDDO
      DO icol = 1 , numcol , ixdel
         iline(icol) = alphai
      ENDDO
      WRITE (ipr,99018) (iline(icol),icol=1,numcol)
      DO i = 1 , numlab
         aim1 = i - 1
         xlable(i) = xmin + (aim1/anumlm)*delx
      ENDDO
      WRITE (ipr,99011) (xlable(i),i=1,numlab)
99011 FORMAT (' ',9X,5E12.4)
!
99012 FORMAT (' ','**************************************************', &
     &        '********************')
99013 FORMAT (' ','                   FATAL ERROR                    ')
99014 FORMAT (' ','THE ',A4,A4,' INPUT ARGUMENT TO THE ',A4,A4,         &
     &        ' SUBROUTINE')
99015 FORMAT (' ','HAS ALL ELEMENTS = ',E15.8)
99016 FORMAT (' ','HAS ALL ELEMENTS IN EXCESS OF THE CUTOFF')
99017 FORMAT (' ','VALUE OF ',E15.8)
99018 FORMAT (' ',18X,54A1)
99019 FORMAT (' ',15X,A1)
!
      END SUBROUTINE PLOTCT
