$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file norcdf.3m_datapac.man
NAME
   norcdf(3f) - [M_datapac:CUMULATIVE_DISTRIBUTION] compute the normal cumulative
   distribution function

SYNOPSIS
      SUBROUTINE NORCDF(X,Cdf)

       REAL(kind=wp),intent(out) :: Cdf
       REAL(kind=wp),intent(in)  :: X

DESCRIPTION
   NORCDF(3f) computes the cumulative distribution function value for the
   normal (Gaussian) distribution with mean = 0 and standard deviation
   = 1.

   This distribution is defined for all X and has the probability
   density function

       f(X) = (1/sqrt(2*pi))*exp(-X*X/2)

INPUT ARGUMENTS
   X      The value at which the cumulative distribution function is to
          be evaluated.
OUTPUT ARGUMENTS
   CDF    The cumulative distribution function value.

EXAMPLES
  Sample program:

   program demo_norcdf
   !@(#) line plotter graph of cumulative distribution function
   use M_datapac, only : norcdf, plott, label
   implicit none
   real,allocatable  :: x(:), y(:)
   integer           :: i
      call label('norcdf')
      x=[(real(i),i=-100,100,1)]
      if(allocated(y))deallocate(y)
      allocate(y(size(x)))
      do i=1,size(x)
         call norcdf(x(i)/10.0,y(i))
      enddo
      call plott(x,y,size(x))
   end program demo_norcdf

  Results:

    The following is a plot of Y(I) (vertically) versus X(I) (horizontally)
                      I-----------I-----------I-----------I-----------I
     0.1000000E+03 -                                                  X
     0.9166666E+02 I                                                  X
     0.8333334E+02 I                                                  X
     0.7500000E+02 I                                                  X
     0.6666667E+02 I                                                  X
     0.5833334E+02 I                                                  X
     0.5000000E+02 -                                                  X
     0.4166667E+02 I                                                  X
     0.3333334E+02 I                                                  X
     0.2500000E+02 I                                                 XX
     0.1666667E+02 I                                             XXXXX
     0.8333336E+01 I                                   X XX XXXXX
     0.0000000E+00 -                   XX X X X X X XX
    -0.8333328E+01 I        XXXXX XX X
    -0.1666666E+02 I   XXXXX
    -0.2499999E+02 I  XX
    -0.3333333E+02 I  X
    -0.4166666E+02 I  X
    -0.5000000E+02 -  X
    -0.5833333E+02 I  X
    -0.6666666E+02 I  X
    -0.7500000E+02 I  X
    -0.8333333E+02 I  X
    -0.9166666E+02 I  X
    -0.1000000E+03 -  X
                      I-----------I-----------I-----------I-----------I
               0.0000E+00  0.2500E+00  0.5000E+00  0.7500E+00  0.1000E+01

AUTHOR
   The original DATAPAC library was written by James Filliben of the
   Statistical Engineering Division, National Institute of Standards
   and Technology.

MAINTAINER
   John Urban, 2022.05.31

LICENSE
   CC0-1.0

REFERENCES
  * National Bureau of Standards Applied Mathematics Series 55, 1964,
    Page 932, Formula 26.2.17.
  * Johnson and Kotz, Continuous Univariate Distributions--1, 1970,
    Pages 40-111.

$ENDBLOCK
!     ORIGINAL VERSION--JUNE      1972.
!     UPDATED         --SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
! processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
SUBROUTINE NORCDF(X,Cdf)
REAL(kind=wp),intent(in)  :: X
REAL(kind=wp),intent(out) :: Cdf
REAL(kind=wp) :: b1, b2, b3, b4, b5, p, t, z
!---------------------------------------------------------------------
!
DATA b1, b2, b3, b4, b5, p/.319381530_wp, -0.356563782_wp, 1.781477937_wp, -1.821255978_wp, 1.330274429_wp, .2316419_wp/
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS. -- NO INPUT ARGUMENT ERRORS POSSIBLE FOR THIS DISTRIBUTION.
!
!-----START POINT-----------------------------------------------------
      z = X
      IF ( X<0.0_wp ) z = -z
      t = 1.0_wp/(1.0_wp+p*z)
      Cdf = 1.0_wp - ((0.39894228040143_wp)*EXP(-0.5_wp*z*z)) *(b1*t+b2*t**2+b3*t**3+b4*t**4+b5*t**5)
      IF ( X<0.0_wp ) Cdf = 1.0_wp - Cdf
 
END SUBROUTINE NORCDF
