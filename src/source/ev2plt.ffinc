$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file ev2plt.3m_datapac.man
NAME
   ev2plt(3f) - [M_datapac:STATISTICS] generate a extreme value type 2
   (Frechet) probability plot (line printer graph)

SYNOPSIS
    Subroutine ev2plt (X, Y)

     ${TYPE} (kind=${KIND}), Intent (InOut) :: X(:)
     Real, Intent (In)                      :: Y

   Where ${TYPE}(kind=${KIND}) may be

      o Real(kind=real32)
      o Real(kind=real64)
      o Integer(kind=int32)
      o Character(kind=selected_char_kind("DEFAULT"),len=*)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_ev2plt
   ! generate a random perturbation of an array
   use M_datapac, only : ev2plt
   implicit none
   character(len=*),parameter :: g='(*(g0,1x))'
   call ev2plt(x,y)
   end program demo_ev2plt

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==ev2plt.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE EV2PLT(X,N,Gamma)
      IMPLICIT NONE
!*--EV2PLT5684
!*** Start of declarations inserted by SPAG
      REAL an , cc , Gamma , hold , pp0025 , pp025 , pp975 , pp9975 ,   &
     &     q , sum1 , sum2 , sum3 , tau , W , wbar , WS , X , Y , ybar ,&
     &     yint
      REAL yslope
      INTEGER i , ipr , iupper , N
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT EV2PLT
!
!     PURPOSE--THIS SUBROUTINE GENERATES A EXTREME VALUE TYPE 2
!              PROBABILITY PLOT
!              (WITH TAIL LENGTH PARAMETER VALUE = GAMMA).
!              THE PROTOTYPE EXTREME VALUE TYPE 2 DISTRIBUTION USED     N
!              HEREIN IS DEFINED FOR ALL NON-NEGATIVE X,
!              AND HAS THE PROBABILITY DENSITY FUNCTION
!              F(X) = GAMMA * (X**(-GAMMA-1)) * EXP(-(X**(-GAMMA))).
!              AS USED HEREIN, A PROBABILITY PLOT FOR A DISTRIBUTION
!              IS A PLOT OF THE ORDERED OBSERVATIONS VERSUS
!              THE ORDER STATISTIC MEDIANS FOR THAT DISTRIBUTION.
!              THE EXTREME VALUE TYPE 2 PROBABILITY PLOT IS USEFUL IN
!              GRAPHICALLY TESTING THE COMPOSITE (THAT IS,
!              LOCATION AND SCALE PARAMETERS NEED NOT BE SPECIFIED)
!              HYPOTHESIS THAT THE UNDERLYING DISTRIBUTION
!              FROM WHICH THE DATA HAVE BEEN RANDOMLY DRAWN
!              IS THE  EXTREME VALUE TYPE 2 DISTRIBUTION
!              WITH TAIL LENGTH PARAMETER VALUE = GAMMA.
!              IF THE HYPOTHESIS IS TRUE, THE PROBABILITY PLOT
!              SHOULD BE NEAR-LINEAR.
!              A MEASURE OF SUCH LINEARITY IS GIVEN BY THE
!              CALCULATED PROBABILITY PLOT CORRELATION COEFFICIENT.
!     INPUT  ARGUMENTS--X      = THE SINGLE PRECISION VECTOR OF
!                                (UNSORTED OR SORTED) OBSERVATIONS.
!                     --N      = THE INTEGER NUMBER OF OBSERVATIONS
!                                IN THE VECTOR X.
!                     --GAMMA  = THE SINGLE PRECISION VALUE OF THE
!                                TAIL LENGTH PARAMETER.
!                                GAMMA SHOULD BE POSITIVE.
!     OUTPUT--A ONE-PAGE EXTREME VALUE TYPE 2 PROBABILITY PLOT.
!     PRINTING--YES.
!     RESTRICTIONS--THE MAXIMUM ALLOWABLE VALUE OF N
!                   FOR THIS SUBROUTINE IS 7500.
!                 --GAMMA SHOULD BE POSITIVE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--SORT, UNIMED, PLOT.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--SQRT, ALOG.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     REFERENCES--FILLIBEN, 'TECHNIQUES FOR TAIL LENGTH ANALYSIS',
!                 PROCEEDINGS OF THE EIGHTEENTH CONFERENCE
!                 ON THE DESIGN OF EXPERIMENTS IN ARMY RESEARCH
!                 DEVELOPMENT AND TESTING (ABERDEEN, MARYLAND,
!                 OCTOBER, 1972), PAGES 425-450.
!               --HAHN AND SHAPIRO, STATISTICAL METHODS IN ENGINEERING,
!                 1967, PAGES 260-308.
!               --JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--1, 1970, PAGES 272-295.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE:  301-921-2315
!     ORIGINAL VERSION--DECEMBER  1972.
!     UPDATED         --SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!     UPDATED         --FEBRUARY  1976.
!
!---------------------------------------------------------------------
!
      DIMENSION X(:)
      DIMENSION Y(7500) , W(7500)
      COMMON /BLOCK2/ WS(15000)
      EQUIVALENCE (Y(1),WS(1))
      EQUIVALENCE (W(1),WS(7501))
!
      ipr = 6
      iupper = 7500
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 .OR. N>iupper ) THEN
         WRITE (ipr,99001) iupper
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE SECOND INPUT ARGUMENT TO THE EV2PLT SUBROU&
     &TINE IS OUTSIDE THE ALLOWABLE (1,',I6,') INTERVAL *****')
         WRITE (ipr,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I8,' *****')
         RETURN
      ELSEIF ( N==1 ) THEN
         WRITE (ipr,99003)
99003    FORMAT (' ',                                                   &
     &'***** NON-FATAL DIAGNOSTIC--THE SECOND INPUT ARGUMENT TO THE EV2P&
     &LT SUBROUTINE HAS THE VALUE 1 *****')
         RETURN
      ELSE
         IF ( Gamma<=0.0 ) THEN
            WRITE (ipr,99004)
99004       FORMAT (' ',                                                &
     &'***** FATAL ERROR--THE THIRD  INPUT ARGUMENT TO THE EV2PLT SUBROU&
     &TINE IS NON-POSITIVE *****')
            WRITE (ipr,99005) Gamma
99005       FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',E15.8,    &
     &              ' *****')
            RETURN
         ELSE
            hold = X(1)
            DO i = 2 , N
               IF ( X(i)/=hold ) GOTO 50
            ENDDO
            WRITE (ipr,99006) hold
99006       FORMAT (' ',                                                &
     &'***** NON-FATAL DIAGNOSTIC--THE FIRST  INPUT ARGUMENT (A VECTOR) &
     &TO THE EV2PLT SUBROUTINE HAS ALL ELEMENTS = ',E15.8,' *****')
            RETURN
         ENDIF
!
!-----START POINT-----------------------------------------------------
!
 50      an = N
!
!     SORT THE DATA
!
         CALL SORT(X,N,Y)
!
!     GENERATE UNIFORM ORDER STATISTIC MEDIANS
!
         CALL UNIMED(N,W)
!
!     COMPUTE EXREME VALUE TYPE 2 DISTRIBUTION ORDER STATISTIC MEDIANS
!
         DO i = 1 , N
            W(i) = (-ALOG(W(i)))**(-1.0/Gamma)
         ENDDO
!
!     PLOT THE ORDERED OBSERVATIONS VERSUS ORDER STATISTICS MEDIANS.
!     COMPUTE THE TAIL LENGTH MEASURE OF THE DISTRIBUTION.
!     WRITE OUT THE TAIL LENGTH MEASURE OF THE DISTRIBUTION
!     AND THE SAMPLE SIZE.
!
         CALL PLOT(Y,W,N)
         q = .9975
         pp9975 = (-ALOG(q))**(-1.0/Gamma)
         q = .0025
         pp0025 = (-ALOG(q))**(-1.0/Gamma)
         q = .975
         pp975 = (-ALOG(q))**(-1.0/Gamma)
         q = .025
         pp025 = (-ALOG(q))**(-1.0/Gamma)
         tau = (pp9975-pp0025)/(pp975-pp025)
         WRITE (ipr,99007) Gamma , tau , N
!
99007    FORMAT (' ',                                                   &
     & 'EXTREME VALUE TYPE 2 (CAUCHY TYPE) PROB. PLOT WITH EXP. PAR. = '&
     & ,E17.10,1X,'(TAU = ',E15.8,')',1X,'SAMPLE SIZE N = ',I7)
!
!     COMPUTE THE PROBABILITY PLOT CORRELATION COEFFICIENT.
!     COMPUTE LOCATION AND SCALE ESTIMATES
!     FROM THE INTERCEPT AND SLOPE OF THE PROBABILITY PLOT.
!     THEN WRITE THEM OUT.
!
         sum1 = 0.0
         sum2 = 0.0
         DO i = 1 , N
            sum1 = sum1 + Y(i)
            sum2 = sum2 + W(i)
         ENDDO
         ybar = sum1/an
         wbar = sum2/an
         sum1 = 0.0
         sum2 = 0.0
         sum3 = 0.0
         DO i = 1 , N
            sum1 = sum1 + (Y(i)-ybar)*(Y(i)-ybar)
            sum2 = sum2 + (Y(i)-ybar)*(W(i)-wbar)
            sum3 = sum3 + (W(i)-wbar)*(W(i)-wbar)
         ENDDO
         cc = sum2/SQRT(sum3*sum1)
         yslope = sum2/sum3
         yint = ybar - yslope*wbar
         WRITE (ipr,99008) cc , yint , yslope
99008    FORMAT (' ','PROBABILITY PLOT CORRELATION COEFFICIENT = ',F8.5,&
     &           5X,'ESTIMATED INTERCEPT = ',E15.8,3X,                  &
     &           'ESTIMATED SLOPE = ',E15.8)
      ENDIF
!
      END SUBROUTINE EV2PLT
