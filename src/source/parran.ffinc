$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file parran.3m_datapac.man
NAME
   parran(3f) - [M_datapac:STATISTICS:RANDOM] generate Pareto random numbers

SYNOPSIS
    Subroutine parran (X, Y)

     ${TYPE} (kind=${KIND}), Intent (InOut) ::  X(:)
   Real(kind=wp) :: (In)                      ::  Y

   Where ${TYPE}(kind=${KIND}) may be

      o Real(kind=real32)
      o Real(kind=real64)
      o Integer(kind=int32)
      o Character(kind=selected_char_kind("DEFAULT"),len=*)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_parran
   use M_datapac, only : parran
   implicit none
   character(len=*),parameter ::  g='(*(g0,1x))'
   ! call parran(x,y)
   end program demo_parran

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==parran.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE PARRAN(N,Gamma,Iseed,X)
      IMPLICIT NONE
!*--PARRAN15598
!*** Start of declarations inserted by SPAG
REAL(kind=wp) :: Gamma , X
      INTEGER i , ipr , Iseed , N
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT PARRAN
!
!     PURPOSE--THIS SUBROUTINE GENERATES A RANDOM SAMPLE OF SIZE N
!              FROM THE PARETO DISTRIBUTION
!              WITH TAIL LENGTH PARAMETER VALUE = GAMMA.
!              THE PROTOTYPE PARETO DISTRIBUTION USED
!              HEREIN IS DEFINED FOR ALL X GREATER THAN
!              OR EQUAL TO 1,
!              AND HAS THE PROBABILITY DENSITY FUNCTION
!              F(X) = GAMMA / (X**(GAMMA+1)).
!     INPUT  ARGUMENTS--N      = THE DESIRED INTEGER NUMBER
!                                OF RANDOM NUMBERS TO BE
!                                GENERATED.
!                     --GAMMA  = THE SINGLE PRECISION VALUE OF THE
!                                TAIL LENGTH PARAMETER.
!                                GAMMA SHOULD BE POSITIVE.
!     OUTPUT ARGUMENTS--X      = A SINGLE PRECISION VECTOR
!                                (OF DIMENSION AT LEAST N)
!                                INTO WHICH THE GENERATED
!                                RANDOM SAMPLE WILL BE PLACED.
!     OUTPUT--A RANDOM SAMPLE OF SIZE N
!             FROM THE PARETO DISTRIBUTION
!             WITH TAIL LENGTH PARAMETER VALUE = GAMMA.
!     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
!     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
!                   OF N FOR THIS SUBROUTINE.
!                 --GAMMA SHOULD BE POSITIVE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--UNIRAN.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN (1977)
!     REFERENCES--TOCHER, THE ART OF SIMULATION,
!                 1963, PAGES 14-15.
!               --HAMMERSLEY AND HANDSCOMB, MONTE CARLO METHODS,
!                 1964, PAGE 36.
!               --JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--1, 1970, PAGES 233-249.
!               --HASTINGS AND PEACOCK, STATISTICAL
!                 DISTRIBUTIONS--A HANDBOOK FOR
!                 STUDENTS AND PRACTITIONERS, 1975,
!                 PAGE 104.
!     VERSION NUMBER--82.6
!     ORIGINAL VERSION--NOVEMBER  1975.
!     UPDATED         --DECEMBER  1981.
!     UPDATED         --MAY       1982.
!
!-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
!
!---------------------------------------------------------------------
!
      DIMENSION X(*)
!
!---------------------------------------------------------------------
!
!CCCC CHARACTER*4 IFEEDB
!CCCC CHARACTER*4 IPRINT
!
!CCCC COMMON /MACH/IRD,IPR,CPUMIN,CPUMAX,NUMBPC,NUMCPW,NUMBPW
!CCCC COMMON /PRINT/IFEEDB,IPRINT
!
      ipr = 6
!
!-----START POINT-----------------------------------------------------
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (ipr,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE PARRAN SUBROU&
     &TINE IS NON-POSITIVE *****')
         WRITE (ipr,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I8,' *****')
         RETURN
      ELSEIF ( Gamma<=0.0_wp ) THEN
         WRITE (ipr,99003)
99003    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE SECOND INPUT ARGUMENT TO THE PARRAN SUBROU&
     &TINE IS NON-POSITIVE *****')
         WRITE (ipr,99004) Gamma
99004    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',E15.8,       &
     &           ' *****')
         RETURN
      ELSE
!
!     GENERATE N UNIFORM (0,1) RANDOM NUMBERS;
!
         CALL UNIRAN(N,Iseed,X)
!
!     GENERATE N PARETO DISTRIBUTION RANDOM NUMBERS
!     USING THE PERCENT POINT FUNCTION TRANSFORMATION METHOD.
!
         DO i = 1 , N
            X(i) = (1.0_wp-X(i))**(-1.0_wp/Gamma)
         ENDDO
      ENDIF
!
      END SUBROUTINE PARRAN
