$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file betran.3m_datapac.man
NAME
   betran(3f) - [M_datapac:STATISTICS] generate beta random numbers

SYNOPSIS
    subroutine BETRAN (N,Alpha,Beta,Iseed,X)

      REAL :: Alpha, Beta, X(N)
      INTEGER :: Iseed,  N

DESCRIPTION

   BETRAN(3f) generates a random sample of size N from the beta distribution
   with single precision shape parameters ALPHA and BETA.
   
   The prototype beta distribution used
   herein has 
   
      mean = ALPHA/(ALPHA+BETA)
   
   and 
   
      standard_deviation=sqrt((ALPHA*BETA)/((ALPHA+BETA)**2)*(ALPHA+BETA+1))
   
   This distribution is defined for all X between 0.0 (inclusively) and 1.0
   (inclusively).  and has the probability density function
   
      f(x) = (1/constant) * x**(alpha-1) * (1.0-x)**(beta-1)
   
   where the constant = the beta function evaluated at the values ALPHA
   and BETA.

OPTIONS
   N      The desired integer number of random numbers to be generated.

   ALPHA  The single precision value of the first shape parameter.
          ALPHA should be greater than or equal to 1.0.

   BETA   The single precision value of the second shape parameter.
          BETA should be greater than or equal to 1.0.
OUTPUT
   X      A random sample of size N from the beta distribution
          with shape parameter values ALPHA and BETA.

          A single precision vector (of dimension at least N) into which
          the generated random sample will be placed.

EXAMPLES
  Sample program:

   program demo_betran
   use M_datapac, only : betran
   implicit none
   character(len=*),parameter :: g='(*(g0,1x))'
   ! call betran(x,y)
   end program demo_betran

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==betran.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
SUBROUTINE BETRAN(N,Alpha,Beta,Iseed,X)
IMPLICIT NONE

REAL :: a1, a2, Alpha, arg, athird, b1, b2, Beta, funct, sqrt3, term, u, X, xg, xg01, xg02, xg1, xg2, xn(1)
REAL :: xn01, xn02
INTEGER :: i , ipr , Iseed , N

!     ***** STILL NEEDS ALGORITHM WORK ******
!
!     OTHER DATAPAC   SUBROUTINES NEEDED--UNIRAN, NORRAN.
!     REFERENCES--GREENWOOD, 'A FAST GENERATOR FOR
!                 BETA-DISTRIBUTED RANDOM VARIABLES',
!                 COMPSTAT 1974, PROCEEDINGS IN
!                 COMPUTATIONAL STATISTICS, VIENNA,
!                 SEPTEMBER, 1974, PAGES 19-27.
!               --TOCHER, THE ART OF SIMULATION,
!                 1963, PAGES 24-27.
!               --HAMMERSLEY AND HANDSCOMB, MONTE CARLO METHODS,
!                 1964, PAGES 36-37.
!               --JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--2, 1970, PAGES 37-56.
!               --HASTINGS AND PEACOCK, STATISTICAL
!                 DISTRIBUTIONS--A HANDBOOK FOR
!                 STUDENTS AND PRACTITIONERS, 1975,
!                 PAGES 30-35.
!               --NATIONAL BUREAU OF STANDARDS APPLIED MATHEMATICS
!                 SERIES 55, 1964, PAGE 952.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING DIVISION
!                 CENTER FOR APPLIED MATHEMATICS
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE--301-921-3651
!     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
!           OF THE NATIONAL BUREAU OF STANDARDS.
!           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
!           MODIFIED, OR OTHERWISE USED IN A CONTEXT
!           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
!     LANGUAGE--ANSI FORTRAN (1966)
!               EXCEPTION--HOLLARITH STRINGS IN FORMAT STATEMENTS
!                          DENOTED BY QUOTES RATHER THAN NH.
!     VERSION NUMBER--82.3
!     ORIGINAL VERSION--NOVEMBER  1975.
!     UPDATED         --FEBRUARY  1976.
!     UPDATED         --JUNE      1978.
!     UPDATED         --DECEMBER  1981.
!
!-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
!
!---------------------------------------------------------------------
!
      DIMENSION X(:)
!
      DIMENSION u(10)
!
!---------------------------------------------------------------------
!
!CCCC CHARACTER*4 IFEEDB
!CCCC CHARACTER*4 IPRINT
!
!CCCC COMMON /MACH/IRD,IPR,CPUMIN,CPUMAX,NUMBPC,NUMCPW,NUMBPW
!CCCC COMMON /PRINT/IFEEDB,IPRINT
!
!-----DATA STATEMENTS-------------------------------------------------
!
      DATA athird/0.33333333/
      DATA sqrt3/1.73205081/
!
      ipr = 6
!
!
!-----START POINT-----------------------------------------------------
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (ipr,99001)
99001    FORMAT (' ','***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE BETRAN SUBROUTINE IS NON-POSITIVE *****')
         WRITE (ipr,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I8,' *****')
         RETURN
      ELSEIF ( Alpha<1.0 ) THEN
         WRITE (ipr,99003)
99003    FORMAT (' ','***** FATAL ERROR--THE SECOND INPUT ARGUMENT TO THE BETRAN SUBROUTINE IS SMALLER THAN 1.0 *****')
         WRITE (ipr,99005) Alpha
         RETURN
      ELSEIF ( Beta<1.0 ) THEN
         WRITE (ipr,99004)
99004    FORMAT (' ','***** FATAL ERROR--THE THIRD  INPUT ARGUMENT TO THE BETRAN SUBROUTINE IS SMALLER THAN 1.0 *****')
         WRITE (ipr,99005) Beta
         RETURN
      ELSE
!
!     GENERATE N BETA RANDOM NUMBERS
!     BY USING THE FACT THAT
!     IF X1 IS A GAMMA VARIATE WITH PARAMETER ALPHA
!     AND IF X2 IS A GAMMA VARIATE WITH PARAMETER BETA,
!     THEN THE RATIO X1/(X1+X2) IS A BETA VARIATE
!     WITH PARAMETERS ALPHA AND BETA.
!
!     TO GENERATE N GAMMA DISTRIBUTION RANDOM NUMBERS,
!     USE GREENWOOD'S REJECTION ALGORITHM--
!     1) GENERATE A NORMAL RANDOM NUMBER;
!     2) TRANSFORM THE NORMAL VARIATE TO AN APPROXIMATE
!        GAMMA VARIATE USING THE WILSON-HILFERTY
!        APPROXIMATION (SEE THE JOHNSON AND KOTZ
!        REFERENCE, PAGE 176);
!     3) FORM THE REJECTION FUNCTION VALUE, BASED
!        ON THE PROBABILITY DENSITY FUNCTION VALUE
!        OF THE ACTUAL DISTRIBUTION OF THE PSEUDO-GAMMA
!        VARIATE, AND THE PROBABILITY DENSITY FUNCTION VALUE
!        OF A TRUE GAMMA VARIATE.
!     4) GENERATE A UNIFORM RANDOM NUMBER;
!     5) IF THE UNIFORM RANDOM NUMBER IS LESS THAN
!        THE REJECTION FUNCTION VALUE, THEN ACCEPT
!        THE PSEUDO-RANDOM NUMBER AS A GAMMA VARIATE;
!        IF THE UNIFORM RANDOM NUMBER IS LARGER THAN
!        THE REJECTION FUNCTION VALUE, THEN REJECT
!        THE PSEUDO-RANDOM NUMBER AS A GAMMA VARIATE.
!
         a1 = 1.0/(9.0*Alpha)
         b1 = SQRT(a1)
         xn01 = -sqrt3 + b1
         xg01 = Alpha*(1.0-a1+b1*xn01)**3
         a2 = 1.0/(9.0*Beta)
         b2 = SQRT(a2)
         xn02 = -sqrt3 + b2
         xg02 = Beta*(1.0-a2+b2*xn02)**3
!
         DO i = 1 , N
            DO
!
               CALL NORRAN(1,Iseed,xn(1))
               xg = Alpha*(1.0-a1+b1*xn(1))**3
               IF ( xg>=0.0 ) THEN
                  term = (xg/xg01)**(Alpha-athird)
                  arg = 0.5*xn(1)*xn(1) - xg - 0.5*xn01*xn01 + xg01
                  funct = term*EXP(arg)
                  CALL UNIRAN(1,Iseed,u)
                  IF ( u(1)<=funct ) THEN
                     xg1 = xg
                     DO
!
                        CALL NORRAN(1,Iseed,xn(1))
                        xg = Beta*(1.0-a2+b2*xn(1))**3
                        IF ( xg>=0.0 ) THEN
                           term = (xg/xg02)**(Beta-athird)
                           arg = 0.5*xn(1)*xn(1) - xg - 0.5*xn02*xn02 + xg02
                           funct = term*EXP(arg)
                           CALL UNIRAN(1,Iseed,u)
                           IF ( u(1)<=funct ) THEN
                              xg2 = xg
!
                              X(i) = xg1/(xg1+xg2)
                              GOTO 50
                           ENDIF
                        ENDIF
                     ENDDO
                  ENDIF
               ENDIF
            ENDDO
!
 50      ENDDO
      ENDIF
99005 FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',E15.8,' *****')
!
END SUBROUTINE BETRAN
