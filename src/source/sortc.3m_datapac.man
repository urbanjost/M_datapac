NAME
   sortc(3f) - [M_datapac:STATISTICS:SORT] sort a vector of sample observations
   and "carry" a second vector

SYNOPSIS
    Subroutine sortc(X,Y,N,Xs,Yc)

      Real, Intent (In)    :: X
      Real, Intent (In)    :: Y
      Integer, Intent (In) :: N
      Real, Intent (Out)   :: Xs
      Real, Intent (Out)   :: Yc

DESCRIPTION

   SORTC(3f) sorts (in ascending order) the N elements of the vector X,
   puts the resulting N sorted values into the single precision vector XS,
   rearranges the elements of the vector Y (according to the sort on X),
   and puts the rearranged Y values into the single precision vector YC.
   This subroutine gives the data analyst the ability to sort one data
   vector while 'carrying along' the elements of a second data vector.

INPUT ARGUMENTS
     x   the single precision vector of
         observations to be sorted.

     y   the single precision vector of
         observations to be 'carried along',
         that is, to be rearranged according
         to the sort on x.

     n   the integer number of observations
         in the vector x.
OUTPUT ARGUMENTS

     xs  the single precision vector
         into which the sorted data values
         from x will be placed.

     yc  the single precision vector
         into which the rearranged
         (according to the sort of the
         vector x) values of the vector y
         will be placed.

EXAMPLES
  Sample program:

   program demo_sortc
   use M_datapac, only : sortc
   implicit none
   integer,parameter            :: isz=20
   real                         :: aa(isz)
   real                         :: bb(isz)
   real                         :: cc(isz)
   real                         :: dd(isz)
   integer                      :: i
      write(*,*)'initializing array with ',isz,' random numbers'
      call random_seed()
      CALL RANDOM_NUMBER(aa)
      aa=aa*450000.0
      bb=real([(i,i=1,isz)])
     call sortc(aa,bb,size(aa),cc,dd)

     write(*,*)'checking if real values are sorted(3f)'
     do i=1,isz-1
        if(cc(i).gt.cc(i+1))then
           write(*,*)'Error in sorting reals small to large ',i,cc(i),cc(i+1)
        endif
     enddo
     write(*,*)'test of sortc(3f) complete'
     write(*,'(4(g0,1x))')(aa(i),bb(i),cc(i),dd(i),i=1,isz)
     write(*,'(*(g0,1x))')sum(aa),sum(cc) ! should be the same if no truncation
     write(*,'(*(g0,1x))')sum(bb),sum(dd)

   end program demo_sortc

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
REFERENCES
  1. CACM MARCH 1969, PAGE 186 (BINARY SORT ALGORITHM BY RICHARD C. SINGLETON).
  2. CACM JANUARY 1970, PAGE 54.
  3. CACM OCTOBER 1970, PAGE 624.
  4. JACM JANUARY 1961, PAGE 41.
LICENSE
   CC0-1.0
