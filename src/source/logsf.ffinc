$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file logsf.3m_datapac.man
NAME
   logsf(3f) - [M_datapac:STATISTICS:SF] compute the logistic sparsity function

SYNOPSIS
    Subroutine logsf (X, Y)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_logsf
   use M_datapac, only : logsf
   implicit none
   character(len=*),parameter ::  g='(*(g0,1x))'
   ! call logsf(x,y)
   end program demo_logsf

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==logsf.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE LOGSF(P,Sf)
      IMPLICIT NONE
!*--LOGSF12337
!*** Start of declarations inserted by SPAG
      INTEGER ipr
REAL(kind=wp) :: P , Sf
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT LOGSF
!
!     PURPOSE--THIS SUBROUTINE COMPUTES THE SPARSITY
!              FUNCTION VALUE FOR THE LOGISTIC DISTRIBUTION
!              WITH MEAN = 0 AND STANDARD DEVIATION = PI/SQRT(3).
!              THIS DISTRIBUTION IS DEFINED FOR ALL X AND HAS
!              THE PROBABILITY DENSITY FUNCTION
!              F(X) = EXP(X)/(1+EXP(X)).
!              NOTE THAT THE SPARSITY FUNCTION OF A DISTRIBUTION
!              IS THE DERIVATIVE OF THE PERCENT POINT FUNCTION,
!              AND ALSO IS THE RECIPROCAL OF THE PROBABILITY
!              DENSITY FUNCTION (BUT IN UNITS OF P RATHER THAN X).
!     INPUT  ARGUMENTS--P      = THE SINGLE PRECISION VALUE
!                                (BETWEEN 0.0 AND 1.0)
!                                AT WHICH THE SPARSITY
!                                FUNCTION IS TO BE EVALUATED.
!     OUTPUT ARGUMENTS--SF     = THE SINGLE PRECISION
!                                SPARSITY FUNCTION VALUE.
!     OUTPUT--THE SINGLE PRECISION SPARSITY
!             FUNCTION VALUE SF.
!     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
!     RESTRICTIONS--P SHOULD BE BETWEEN 0.0 AND 1.0, EXCLUSIVELY.
!     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     REFERENCES--FILLIBEN, SIMPLE AND ROBUST LINEAR ESTIMATION
!                 OF THE LOCATION PARAMETER OF A SYMMETRIC
!                 DISTRIBUTION (UNPUBLISHED PH.D. DISSERTATION,
!                 PRINCETON UNIVERSITY), 1969, PAGES 21-44, 229-231.
!               --FILLIBEN, 'THE PERCENT POINT FUNCTION',
!                 (UNPUBLISHED MANUSCRIPT), 1970, PAGES 28-31.
!               --JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--2, 1970, PAGES 1-21.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE:  301-921-2315
!     ORIGINAL VERSION--JUNE      1972.
!     UPDATED         --SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!
!---------------------------------------------------------------------
!
      ipr = 6
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( P<=0.0_wp .OR. P>=1.0_wp ) THEN
         WRITE (ipr,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE LOGSF  SUBROU&
     &TINE IS OUTSIDE THE ALLOWABLE (0,1) INTERVAL *****')
         WRITE (ipr,99002) P
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',E15.8,       &
     &           ' *****')
         RETURN
      ELSE
!
!-----START POINT-----------------------------------------------------
!
         Sf = 1.0_wp/(P-P*P)
      ENDIF
!
      END SUBROUTINE LOGSF
