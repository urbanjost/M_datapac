$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file hfnppf.3datapac.man
NAME
   hfnppf(3f) - [M_datapac:STATISTICS] HFNPPF compute the half-normal percent point function

SYNOPSIS
    Subroutine hfnppf (X, Y)

     ${TYPE} (kind=${KIND}), Intent (InOut) :: X(:)
     Real, Intent (In)                      :: Y

   Where ${TYPE}(kind=${KIND}) may be

      o Real(kind=real32)
      o Real(kind=real64)
      o Integer(kind=int32)
      o Character(kind=selected_char_kind("DEFAULT"),len=*)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_hfnppf
   ! generate a random perturbation of an array
   use M_datapac, only : hfnppf
   implicit none
   character(len=*),parameter :: g='(*(g0,1x))'
   call hfnppf(x,y)
   end program demo_hfnppf

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==hfnppf.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE HFNPPF(P,Ppf)
      IMPLICIT NONE
!*--HFNPPF9883
!*** Start of declarations inserted by SPAG
      REAL arg , P , Ppf
      INTEGER ipr
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT HFNPPF
!
!     PURPOSE--THIS SUBROUTINE COMPUTES THE PERCENT POINT
!              FUNCTION VALUE FOR THE HALFNORMAL
!              DISTRIBUTION.
!              THE HALFNORMAL DISTRIBUTION USED
!              HEREIN HAS MEAN = SQRT(2/PI) = 0.79788456
!              AND STANDARD DEVIATION = 1.
!              THIS DISTRIBUTION IS DEFINED FOR ALL NON-NEGATIVE X
!              AND HAS THE PROBABILITY DENSITY FUNCTION
!              F(X) = (2/SQRT(2*PI)) * EXP(-X*X/2).
!              THE HALFNORMAL DISTRIBUTION USED HEREIN
!              IS THE DISTRIBUTION OF THE VARIATE X = ABS(Z) WHERE
!              THE VARIATE Z IS NORMALLY DISTRIBUTED
!              WITH MEAN = 0 AND STANDARD DEVIATION = 1.
!              NOTE THAT THE PERCENT POINT FUNCTION OF A DISTRIBUTION
!              IS IDENTICALLY THE SAME AS THE INVERSE CUMULATIVE
!              DISTRIBUTION FUNCTION OF THE DISTRIBUTION.
!     INPUT  ARGUMENTS--P      = THE SINGLE PRECISION VALUE
!                                (BETWEEN 0.0 (INCLUSIVELY)
!                                AND 1.0 (EXCLUSIVELY))
!                                AT WHICH THE PERCENT POINT
!                                FUNCTION IS TO BE EVALUATED.
!     OUTPUT ARGUMENTS--PPF    = THE SINGLE PRECISION PERCENT
!                                POINT FUNCTION VALUE.
!     OUTPUT--THE SINGLE PRECISION PERCENT POINT FUNCTION .
!             VALUE PPF FOR THE HALFNORMAL DISTRIBUTION
!             WITH MEAN = SQRT(2/PI) = 0.79788456
!             AND STANDARD DEVIATION = 1.
!     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
!     RESTRICTIONS--P SHOULD BE BETWEEN 0.0 (INCLUSIVELY)
!                   AND 1.0 (EXCLUSIVELY).
!     OTHER DATAPAC   SUBROUTINES NEEDED--NORPPF.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     REFERENCES--JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE
!                 DISTRIBUTIONS--1, 1970, PAGES 53, 59, 81, 83.
!               --DANIEL, 'USE OF HALF-NORMAL PLOTS IN
!                 INTERPRETING FACTORIAL TWO-LEVEL EXPERIMENTS',
!                 TECHNOMETRICS, 1959, PAGES 311-341.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE:  301-921-2315
!     ORIGINAL VERSION--NOVEMBER  1975.
!     UPDATED         --OCTOBER   1976.
!
!---------------------------------------------------------------------
!
      ipr = 6
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( P<0.0 .OR. P>=1.0 ) THEN
         WRITE (ipr,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE HFNPPF SUBROU&
     &TINE IS OUTSIDE THE ALLOWABLE (0,1) INTERVAL *****')
         WRITE (ipr,99002) P
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',E15.8,       &
     &           ' *****')
         Ppf = 0.0
         RETURN
      ELSE
!
!-----START POINT-----------------------------------------------------
!
         arg = (1.0+P)/2.0
         CALL NORPPF(arg,Ppf)
         IF ( Ppf<=0.0 ) Ppf = 0.0
      ENDIF
!
      END SUBROUTINE HFNPPF
