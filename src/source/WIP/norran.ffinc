$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file norran.3m_datapac.man
NAME
   norran(3f) - [M_datapac:RANDOM] generate normal random numbers

SYNOPSIS
      SUBROUTINE NORRAN(N,Iseed,X)

DESCRIPTION

   norran(3f) generates a random sample of size n from the the normal
   (gaussian) distribution with mean = 0 and standard deviation = 1.

   this distribution is defined for all x and has the probability
   density function

       f(x) = (1/sqrt(2*pi))*exp(-x*x/2).

OPTIONS
    X   description of parameter
    Y   description of parameter

  ISEED  An integer iseed value. Should be set to a non-negative value
         to start a new sequence of values. Will be set to -1 on return
         to indicate the next call should continue the current random
         sequence walk.


EXAMPLES
  Sample program:

   program demo_norran
   use M_datapac, only : norran
   implicit none
   ! call norran(x,y)
   end program demo_norran

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
REFERENCES
  * BOX AND MULLER, 'A NOTE ON THE GENERATION OF RANDOM NORMAL DEVIATES',
    JOURNAL OF THE ASSOCIATION FOR COMPUTING MACHINERY, 1958, PAGES 610-611.
  * TOCHER, THE ART OF SIMULATION, 1963, PAGES 33-34.
  * HAMMERSLEY AND HANDSCOMB, MONTE CARLO METHODS, 1964, PAGE 39.
  * JOHNSON AND KOTZ, CONTINUOUS UNIVARIATE DISTRIBUTIONS--1, 1970,
    PAGES 40-111.
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
! processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE NORRAN(N,Iseed,X)
REAL(kind=wp) :: arg1 , arg2 , pi , sqrt1 , u1 , u2 , X , y , z1 , z2
INTEGER :: i , ip1 , Iseed , N
!
!     INPUT ARGUMENTS--N      = THE DESIRED INTEGER NUMBER
!                                OF RANDOM NUMBERS TO BE
!                                GENERATED.
!     OUTPUT ARGUMENTS--X      = A  VECTOR
!                                (OF DIMENSION AT LEAST N)
!                                INTO WHICH THE GENERATED
!                                RANDOM SAMPLE WILL BE PLACED.
!     OUTPUT--A RANDOM SAMPLE OF SIZE N
!             FROM THE NORMAL DISTRIBUTION
!             WITH MEAN = 0 AND STANDARD DEVIATION = 1.
!     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
!     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
!                   OF N FOR THIS SUBROUTINE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--UNIRAN.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--LOG, SQRT, SIN, COS.
!     MODE OF INTERNAL OPERATIONS--.
!     LANGUAGE--ANSI FORTRAN (1977)
!     METHOD--BOX-MULLER ALGORITHM.
!     VERSION NUMBER--82.6
!     ORIGINAL VERSION--JUNE      1972.
!     UPDATED         --SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!     UPDATED         --JULY      1976.
!     UPDATED         --DECEMBER  1981.
!     UPDATED         --MAY       1982.
!
!-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
!
!---------------------------------------------------------------------
!
      DIMENSION X(:)
      DIMENSION y(2)
!
!---------------------------------------------------------------------
!
!-----DATA STATEMENTS-------------------------------------------------
!
      DATA pi/3.14159265359_wp/
!
!-----START POINT-----------------------------------------------------
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (G_IO,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE NORRAN SUBROU&
     &TINE IS NON-POSITIVE *****')
         WRITE (G_IO,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I8,' *****')
         RETURN
      ELSE
!
!     GENERATE N UNIFORM (0,1) RANDOM NUMBERS;
!     THEN GENERATE 2 ADDITIONAL UNIFORM (0,1) RANDOM NUMBERS
!     (TO BE USED BELOW IN FORMING THE N-TH NORMAL
!     RANDOM NUMBER WHEN THE DESIRED SAMPLE SIZE N
!     HAPPENS TO BE ODD).
!
         CALL UNIRAN(N,Iseed,X)
         CALL UNIRAN(2,Iseed,y)
!
!     GENERATE N NORMAL RANDOM NUMBERS
!     USING THE BOX-MULLER METHOD.
!
         DO i = 1 , N , 2
            ip1 = i + 1
            u1 = X(i)
            IF ( i==N ) THEN
               u2 = y(2)
            ELSE
               u2 = X(ip1)
            ENDIF
            arg1 = -2.0_wp*LOG(u1)
            arg2 = 2.0_wp*pi*u2
            sqrt1 = SQRT(arg1)
            z1 = sqrt1*COS(arg2)
            z2 = sqrt1*SIN(arg2)
            X(i) = z1
            IF ( i/=N ) X(ip1) = z2
         ENDDO
      ENDIF
!
END SUBROUTINE NORRAN
