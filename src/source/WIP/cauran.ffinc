$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file cauran.3m_datapac.man
NAME
   cauran(3f) - [M_datapac:RANDOM] generate Cauchy random numbers

SYNOPSIS
SUBROUTINE CAURAN(N,Iseed,X)

DESCRIPTION
   CAURAN(3f) generates a random sample of size N from the Cauchy
   distribution with median = 0 and 75% point = 1.

   This distribution is defined for all X and has the probability
   density function

       f(X) = (1/pi)*(1/(1+X*X))

OPTIONS
    X   description of parameter
    Y   description of parameter

  ISEED  An integer iseed value. Should be set to a non-negative value
         to start a new sequence of values. Will be set to -1 on return
         to indicate the next call should continue the current random
         sequence walk.


EXAMPLES
  Sample program:

   program demo_cauran
   use M_datapac, only : cauran
   implicit none
   ! call cauran(x,y)
   end program demo_cauran

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the
   Statistical Engineering Division, National Institute of Standards
   and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
REFERENCES
 * tocher, the art of simulation, 1963, page 15.
 * hammersley and handscomb, monte carlo methods, 1964, page 36.
 * filliben, simple and robust linear estimation of the location parameter
   of a symmetric distribution (unpublished ph.d. dissertation, princeton
   university), 1969, page 231.
 * filliben, 'the percent point function', (unpublished manuscript),
   1970, pages 28-31.
 * johnson and kotz, continuous univariate distributions--1, 1970,
   pages 154-165.
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
! processed by SPAG 7.51RB at 12:54 on 18 Mar 2022

SUBROUTINE CAURAN(N,Iseed,X)
REAL(kind=wp) :: arg , pi , X
INTEGER :: i , Iseed , N
!
!     INPUT ARGUMENTS--N      = THE DESIRED INTEGER NUMBER
!                                OF RANDOM NUMBERS TO BE
!                                GENERATED.
!     OUTPUT ARGUMENTS--X      = A  VECTOR
!                                (OF DIMENSION AT LEAST N)
!                                INTO WHICH THE GENERATED
!                                RANDOM SAMPLE WILL BE PLACED.
!     OUTPUT--A RANDOM SAMPLE OF SIZE N
!             FUNCTION VALUE FOR THE CAUCHY DISTRIBUTION
!             WITH MEDIAN = 0 AND 75% POINT = 1.
!     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
!     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
!                   OF N FOR THIS SUBROUTINE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--UNIRAN.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--SIN, COS.
!     MODE OF INTERNAL OPERATIONS--.
!     VERSION NUMBER--82/7
!     ORIGINAL VERSION--JUNE      1972.
!     UPDATED         --SEPTEMBER 1975.
!     UPDATED         --NOVEMBER  1975.
!     UPDATED         --DECEMBER  1981.
!     UPDATED         --MAY       1982.
!
!-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
!
!---------------------------------------------------------------------
!
      DIMENSION X(:)
!
!-----DATA STATEMENTS-------------------------------------------------
!
      DATA pi/3.14159265359_wp/
!
!-----START POINT-----------------------------------------------------
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (G_IO,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE FIRST  INPUT ARGUMENT TO THE CAURAN SUBROU&
     &TINE IS NON-POSITIVE *****')
         WRITE (G_IO,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I0,' *****')
         RETURN
      ELSE
!
!     GENERATE N UNIFORM (0,1) RANDOM NUMBERS;
!
         CALL UNIRAN(N,Iseed,X)
!
!     GENERATE N CAUCHY RANDOM NUMBERS
!     USING THE PERCENT POINT FUNCTION TRANSFORMATION METHOD.
!
         DO i = 1 , N
            arg = pi*X(i)
            X(i) = -COS(arg)/SIN(arg)
         ENDDO
      ENDIF
!
END SUBROUTINE CAURAN
