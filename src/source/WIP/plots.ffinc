$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file plots.3m_datapac.man
NAME
   plots(3f) - [M_datapac:GENERIC_LINE_PLOT] generate a line printer
   plot of Y vs X

SYNOPSIS
      SUBROUTINE PLOTS(Y,X,N,D,Dmin,Dmax)

DESCRIPTION
   plots(3f) yields a one-page printer plot of y(i) versus x(i):

     1. with only those points (x(i),y(i)) plotted
        for which the corresponding value of d(i)
        is between the specified values of dmin and dmax.

   the use of the subset definition vector d gives the data analyst
   the capability of plotting subsets of the data, where the subset is
   defined by values in the vector d.

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_plots
   use M_datapac, only : plots
   implicit none
   ! call plots(x,y)
   end program demo_plots

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
! processed by SPAG 7.51RB at 12:54 on 18 Mar 2022

SUBROUTINE PLOTS(Y,X,N,D,Dmin,Dmax)
REAL(kind=wp) :: aim1 , cutoff , D , Dmax , Dmin , hold , ratiox , ratioy ,   &
     &     X , x25 , x75 , xmax , xmid , xmin , Y , ylable , ymax , ymin
INTEGER i , iflag , ip2 , j , k , mx , my , N , n2
!
!     INPUT ARGUMENTS--Y      = THE  VECTOR OF
!                               (UNSORTED OR SORTED) OBSERVATIONS
!                               TO BE PLOTTED VERTICALLY.
!                    --X      = THE  VECTOR OF
!                               (UNSORTED OR SORTED) OBSERVATIONS
!                               TO BE PLOTTED HORIZONTALLY.
!                    --N      = THE INTEGER NUMBER OF OBSERVATIONS
!                               IN THE VECTOR Y.
!                    --D      = THE  VECTOR
!                               WHICH 'DEFINES' THE VARIOUS
!                               POSSIBLE SUBSETS.
!                    --DMIN   = THE  VALUE
!                               WHICH DEFINES THE LOWER BOUND
!                               (INCLUSIVELY) OF THE PARTICULAR
!                               SUBSET OF INTEREST TO BE PLOTTED.
!                    --DMAX   = THE  VALUE
!                               WHICH DEFINES THE UPPER BOUND
!                               (INCLUSIVELY) OF THE PARTICULAR
!                               SUBSET OF INTEREST TO BE PLOTTED.
!     OUTPUT--A ONE-page PRINTER PLOT OF Y(I) VERSUS X(I),
!             FOR ONLY OF A SPECIFIED SUBSET OF THE DATA.
!     PRINTING--YES.
!     COMMENT--FOR A GIVEN DUMMY INDEX I,
!              IF D(I) IS SMALLER THAN DMIN OR LARGER THAN DMAX,
!              THEN THE CORRESPONDING POINT (X(I),Y(I))
!              WILL NOT BE PLOTTED.
!            --VALUES IN THE VERTICAL AXIS VECTOR (Y)
!              OR THE HORIZONTAL AXIS VECTOR (X) WHICH ARE
!              EQUAL TO OR IN EXCESS OF 10.0**10 WILL NOT BE
!              PLOTTED.
!              THIS CONVENTION GREATLY SIMPLIFIES THE PROBLEM
!              OF PLOTTING WHEN SOME ELEMENTS IN THE VECTOR Y
!              (OR X) ARE 'MISSING DATA', OR WHEN WE PURPOSELY
!              WANT TO IGNORE CERTAIN ELEMENTS IN THE VECTOR Y
!              (OR X) FOR PLOTTING PURPOSES (THAT IS, WE DO NOT
!              WANT CERTAIN ELEMENTS IN Y (OR X) TO BE PLOTTED).
!              TO CAUSE SPECIFIC ELEMENTS IN Y (OR X) TO BE
!              IGNORED, WE REPLACE THE ELEMENTS BEFOREHAND
!              (BY, FOR EXAMPLE, USE OF THE   REPLAC   SUBROUTINE)
!              BY SOME LARGE VALUE (LIKE, SAY, 10.0**10) AND
!              THEY WILL SUBSEQUENTLY BE IGNORED IN THE PLOT
!              SUBROUTINE.
!     ORIGINAL VERSION--OCTOBER   1975.
!     UPDATED         --NOVEMBER  1975.
!     UPDATED         --FEBRUARY  1977.
!
!---------------------------------------------------------------------
!
CHARACTER(len=4) :: IGRaph
CHARACTER(len=4) :: sbnam1 , sbnam2
CHARACTER(len=4) :: alph11 , alph12 , alph21 , alph22 , alph31 , alph32
CHARACTER(len=4) :: alph41 , alph42
CHARACTER(len=4) :: blank , hyphen , alphai , alphax
CHARACTER(len=4) :: alpham , alphaa , alphad , alphan , equal
!
      DIMENSION Y(:)
      DIMENSION X(:)
      DIMENSION D(:)
      DIMENSION ylable(11)
      COMMON /BLOCK1/ IGRaph(55,130)
!
      DATA sbnam1 , sbnam2/'PLOT' , 'S   '/
      DATA alph11 , alph12/'FIRS' , 'T   '/
      DATA alph21 , alph22/'SECO' , 'ND  '/
      DATA alph31 , alph32/'THIR' , 'D   '/
      DATA alph41 , alph42/'FOUR' , 'TH  '/
      DATA blank , hyphen , alphai , alphax/' ' , '-' , 'I' , 'X'/
      DATA alpham , alphaa , alphad , alphan , equal/'M' , 'A' , 'D' ,  &
     &     'N' , '='/
!
      cutoff = (10.0_wp**10) - 1000.0_wp
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      WRITE (G_IO,99001)
99001 FORMAT ('1')
      IF ( N<1 ) THEN
         WRITE (G_IO,99015)
         WRITE (G_IO,99016)
         WRITE (G_IO,99017) alph31 , alph32 , sbnam1 , sbnam2
         WRITE (G_IO,99002) N
99002    FORMAT (' ','IS NON-NEGATIVE (WITH VALUE = ',I0,')')
         WRITE (G_IO,99015)
         RETURN
      ELSE
         IF ( N==1 ) THEN
            WRITE (G_IO,99015)
            WRITE (G_IO,99016)
            WRITE (G_IO,99017) alph31 , alph32 , sbnam1 , sbnam2
            WRITE (G_IO,99003) N
99003       FORMAT (' ','HAS THE VALUE 1')
            WRITE (G_IO,99015)
            RETURN
         ELSE
!
            hold = Y(1)
            DO i = 2 , N
               IF ( Y(i)/=hold ) GOTO 50
            ENDDO
            WRITE (G_IO,99015)
            WRITE (G_IO,99016)
            WRITE (G_IO,99017) alph11 , alph12 , sbnam1 , sbnam2
            WRITE (G_IO,99018) hold
            WRITE (G_IO,99015)
            RETURN
         ENDIF
 50      hold = X(1)
         DO i = 2 , N
            IF ( X(i)/=hold ) GOTO 100
         ENDDO
         WRITE (G_IO,99015)
         WRITE (G_IO,99016)
         WRITE (G_IO,99017) alph21 , alph22 , sbnam1 , sbnam2
         WRITE (G_IO,99018) hold
         WRITE (G_IO,99015)
         RETURN
      ENDIF
 100  hold = D(1)
      DO i = 2 , N
         IF ( D(i)/=hold ) GOTO 200
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99004)
99004 FORMAT (' ','               NON-FATAL DIAGNOSTIC               ')
      WRITE (G_IO,99017) alph41 , alph42 , sbnam1 , sbnam2
      WRITE (G_IO,99018) hold
      WRITE (G_IO,99015)
!
 200  DO i = 1 , N
         IF ( Y(i)<cutoff ) GOTO 300
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99016)
      WRITE (G_IO,99017) alph11 , alph12 , sbnam1 , sbnam2
      WRITE (G_IO,99019)
      WRITE (G_IO,99020) cutoff
      WRITE (G_IO,99015)
      RETURN
 300  DO i = 1 , N
         IF ( X(i)<cutoff ) GOTO 400
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99016)
      WRITE (G_IO,99017) alph21 , alph22 , sbnam1 , sbnam2
      WRITE (G_IO,99019)
      WRITE (G_IO,99020) cutoff
      WRITE (G_IO,99015)
      RETURN
 400  DO i = 1 , N
         IF ( D(i)<cutoff ) GOTO 500
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99016)
      WRITE (G_IO,99017) alph41 , alph42 , sbnam1 , sbnam2
      WRITE (G_IO,99019)
      WRITE (G_IO,99020) cutoff
      WRITE (G_IO,99015)
      RETURN
!
 500  DO i = 1 , N
         IF ( Dmin<D(i) .AND. D(i)<Dmax ) GOTO 600
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99016)
      WRITE (G_IO,99017) alph41 , alph42 , sbnam1 , sbnam2
      WRITE (G_IO,99005)
99005 FORMAT (' ','HAS ALL ELEMENTS OUTSIDE THE INTERVAL')
      WRITE (G_IO,99006) Dmin , Dmax
99006 FORMAT (' ','(',E15.8,',',E15.8,')',' AS DEFINED BY')
      WRITE (G_IO,99007)
99007 FORMAT (' ','THE FIFTH  AND SIXTH  INPUT ARGUMENTS.')
      WRITE (G_IO,99015)
      RETURN
!
 600  n2 = 0
      DO i = 1 , N
         IF ( Y(i)<cutoff .AND. X(i)<cutoff .AND. D(i)<cutoff ) THEN
            IF ( Dmin<D(i) .AND. D(i)<Dmax ) n2 = n2 + 1
            IF ( n2>=2 ) GOTO 700
         ENDIF
      ENDDO
      WRITE (G_IO,99015)
      WRITE (G_IO,99016)
      WRITE (G_IO,99008) alph11 , alph12 , alph21 , alph22 , alph41 ,    &
     &                  alph42
99008 FORMAT (' ','THE ',A4,A4,', ',A4,A4,', AND ',A4,A4)
      WRITE (G_IO,99009) sbnam1 , sbnam2
99009 FORMAT (' ','INPUT ARGUMENTS TO THE ',A4,A4,' SUBROUTINE')
      WRITE (G_IO,99010)
99010 FORMAT (' ','ARE SUCH THAT TOO MANY POINTS HAVE BEEN',            &
     &        ' EXCLUDED FROM THE PLOT.')
      WRITE (G_IO,99011) n2
99011 FORMAT (' ','ONLY ',I0,' POINTS ARE LEFT TO BE PLOTTED.')
      WRITE (G_IO,99015)
      RETURN
!
!-----START POINT-----------------------------------------------------
!
!     DETERMINE THE VALUES TO BE LISTED ON THE LEFT VERTICAL AXIS
!
 700  DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( D(i)>=Dmin ) THEN
                  IF ( D(i)<=Dmax ) THEN
                     ymin = Y(i)
                     ymax = Y(i)
                     EXIT
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( D(i)>=Dmin ) THEN
                  IF ( D(i)<=Dmax ) THEN
                     IF ( Y(i)<ymin ) ymin = Y(i)
                     IF ( Y(i)>ymax ) ymax = Y(i)
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      DO i = 1 , 9
         aim1 = i - 1
         ylable(i) = ymax - (aim1/8.0_wp)*(ymax-ymin)
      ENDDO
!
!     DETERMINE THE VALUES TO BE LISTED ON THE BOTTOM HORIZONTAL AXIS
!     DETERMINE XMIN, XMAX, XMID, X25 (=THE 25% POINT), AND
!     X75 (=THE 75% POINT)
!
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( D(i)>=Dmin ) THEN
                  IF ( D(i)<=Dmax ) THEN
                     xmin = X(i)
                     xmax = X(i)
                     EXIT
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( D(i)>=Dmin ) THEN
                  IF ( D(i)<=Dmax ) THEN
                     IF ( X(i)<xmin ) xmin = X(i)
                     IF ( X(i)>xmax ) xmax = X(i)
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO
      xmid = (xmin+xmax)/2.0_wp
      x25 = 0.75_wp*xmin + 0.25_wp*xmax
      x75 = 0.25_wp*xmin + 0.75_wp*xmax
!
!     BLANK OUT THE GRAPH
!
      DO i = 1 , 45
         DO j = 1 , 109
            IGRaph(i,j) = blank
         ENDDO
      ENDDO
!
!     PRODUCE THE VERTICAL AXES
!
      DO i = 3 , 43
         IGRaph(i,5) = alphai
         IGRaph(i,109) = alphai
      ENDDO
      DO i = 3 , 43 , 5
         IGRaph(i,5) = hyphen
         IGRaph(i,109) = hyphen
      ENDDO
      IGRaph(3,1) = equal
      IGRaph(3,2) = alpham
      IGRaph(3,3) = alphaa
      IGRaph(3,4) = alphax
      IGRaph(23,1) = equal
      IGRaph(23,2) = alpham
      IGRaph(23,3) = alphai
      IGRaph(23,4) = alphad
      IGRaph(43,1) = equal
      IGRaph(43,2) = alpham
      IGRaph(43,3) = alphai
      IGRaph(43,4) = alphan
!
!     PRODUCE THE HORIZONTAL AXES
!
      DO j = 7 , 107
         IGRaph(1,j) = hyphen
         IGRaph(45,j) = hyphen
      ENDDO
      DO j = 7 , 107 , 25
         IGRaph(1,j) = alphai
         IGRaph(45,j) = alphai
      ENDDO
      DO j = 20 , 107 , 25
         IGRaph(1,j) = alphai
         IGRaph(45,j) = alphai
      ENDDO
!
!     DETERMINE THE (X,Y) PLOT POSITIONS
!
      ratioy = 40.0_wp/(ymax-ymin)
      ratiox = 100.0_wp/(xmax-xmin)
      DO i = 1 , N
         IF ( Y(i)<cutoff ) THEN
            IF ( X(i)<cutoff ) THEN
               IF ( D(i)>=Dmin ) THEN
                  IF ( D(i)<=Dmax ) THEN
                     mx = ratiox*(X(i)-xmin) + 0.5_wp
                     mx = mx + 7
                     my = ratioy*(Y(i)-ymin) + 0.5_wp
                     my = 43 - my
                     IGRaph(my,mx) = alphax
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO
!
!     WRITE OUT THE GRAPH
!
      DO i = 1 , 45
         ip2 = i + 2
         iflag = ip2 - (ip2/5)*5
         k = ip2/5
         IF ( iflag/=0 ) WRITE (G_IO,99012) (IGRaph(i,j),j=1,109)
!
99012    FORMAT (' ',20X,109A1)
         IF ( iflag==0 ) WRITE (G_IO,99013) ylable(k) ,                  &
     &                          (IGRaph(i,j),j=1,109)
99013    FORMAT (' ',F20.7,109A1)
      ENDDO
      WRITE (G_IO,99014) xmin , x25 , xmid , x75 , xmax
99014 FORMAT (' ',14X,F20.7,5X,F20.7,5X,F20.7,5X,F20.7,1X,F20.7)
!
99015 FORMAT (' ','**************************************************', &
     &        '********************')
99016 FORMAT (' ','                   FATAL ERROR                    ')
99017 FORMAT (' ','THE ',A4,A4,' INPUT ARGUMENT TO THE ',A4,A4,         &
     &        ' SUBROUTINE')
99018 FORMAT (' ','HAS ALL ELEMENTS = ',E15.8)
99019 FORMAT (' ','HAS ALL ELEMENTS IN EXCESS OF THE CUTOFF')
99020 FORMAT (' ','VALUE OF ',E15.8)
!
END SUBROUTINE PLOTS
