$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
$BLOCK COMMENT --file define.3datapac.man
NAME
   define(3f) - [M_datapac:STATISTICS] DEFINE set all elements of a vector equal to a specified constant

SYNOPSIS
    Subroutine define (X, Y)

     ${TYPE} (kind=${KIND}), Intent (InOut) :: X(:)
     Real, Intent (In)                      :: Y

   Where ${TYPE}(kind=${KIND}) may be

      o Real(kind=real32)
      o Real(kind=real64)
      o Integer(kind=int32)
      o Character(kind=selected_char_kind("DEFAULT"),len=*)

DESCRIPTION
  Description

OPTIONS
    X   description of parameter
    Y   description of parameter

EXAMPLES
  Sample program:

   program demo_define
   ! generate a random perturbation of an array
   use M_datapac, only : define
   implicit none
   character(len=*),parameter :: g='(*(g0,1x))'
   call define(x,y)
   end program demo_define

  Results:

AUTHOR
   The original DATAPAC library was written by James Filliben of the Statistical
   Engineering Division, National Institute of Standards and Technology.
MAINTAINER
   John Urban, 2022.05.31
LICENSE
   CC0-1.0
$ENDBLOCK
$!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
!*==define.f90  processed by SPAG 7.51RB at 12:54 on 18 Mar 2022
      SUBROUTINE DEFINE(X,N,Xnew)
      IMPLICIT NONE
!*--DEFINE3301
!*** Start of declarations inserted by SPAG
      INTEGER i , ipr , N
      REAL X , Xnew
!*** End of declarations inserted by SPAG
!CCCC FOLLOWING LINE ADDED TO MAKE THIS A DLL.
!      DLL_EXPORT DEFINE
!
!     PURPOSE--THIS SUBROUTINE SETS ALL OF THE ELEMENTS
!              IN THE SINGLE PRECISION VECTOR X
!              EQUAL TO XNEW.
!              THIS SUBROUTINE IS USEFUL IN DEFINING A
!              VECTOR OF CONSTANTS.
!              FOR EXAMPLE, IF THE DATA ANALYST WISHES
!              TO TREAT THE EQUAL WEIGHTS CASE IN DOING
!              A POLYNOMIAL REGRESSION, THIS COULD
!              BE DONE BY DEFINING AS, SAY, 1.0
!              THE INPUT WEIGHT VECTOR W TO THE
!              DATAPAC POLY SUBROUTINE;
!              SUCH DEFINING COULD BE DONE
!              BY USE OF THE DEFINE SUBROUTINE
!              WITH XNEW = 1.0.
!     INPUT  ARGUMENTS--X      = THE SINGLE PRECISION VECTOR OF
!                                (UNSORTED OR SORTED) OBSERVATIONS.
!                     --N      = THE INTEGER NUMBER OF OBSERVATIONS
!                                IN THE VECTOR X.
!                     --XNEW   = THE SINGLE PRECISION VALUE
!                                TO WHICH ALL OF THE
!                                OBSERVATIONS IN THE VECTOR X
!                                WILL BE SET.
!     OUTPUT--THE SINGLE PRECISION VECTOR X
!             EVERY ELEMENT OF WHICH
!             WILL BE EQUAL TO XNEW.
!             ALSO, 3 LINES OF SUMMARY INFORMATION
!             WILL BE GENERATED INDICATING
!             1) WHAT THE SAMPLE SIZE WAS (N);
!             2) WHAT THE DEFINING CONSTANT WAS (XNEW);
!     PRINTING--YES.
!     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
!                   OF N FOR THIS SUBROUTINE.
!     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
!     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
!     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
!     LANGUAGE--ANSI FORTRAN.
!     REFERENCES--NONE.
!     WRITTEN BY--JAMES J. FILLIBEN
!                 STATISTICAL ENGINEERING LABORATORY (205.03)
!                 NATIONAL BUREAU OF STANDARDS
!                 WASHINGTON, D. C. 20234
!                 PHONE--301-921-2315
!     ORIGINAL VERSION--NOVEMBER  1975.
!     UPDATED  VERSION--JULY      1976.
!
!---------------------------------------------------------------------
!
      DIMENSION X(:)
!
      ipr = 6
!
!     CHECK THE INPUT ARGUMENTS FOR ERRORS
!
      IF ( N<1 ) THEN
         WRITE (ipr,99001)
99001    FORMAT (' ',                                                   &
     &'***** FATAL ERROR--THE SECOND INPUT ARGUMENT TO THE DEFINE SUBROU&
     &TINE IS NON-POSITIVE *****')
         WRITE (ipr,99002) N
99002    FORMAT (' ','***** THE VALUE OF THE ARGUMENT IS ',I8,' *****')
         RETURN
      ELSE
         IF ( N==1 ) THEN
            WRITE (ipr,99003)
99003       FORMAT (' ',                                                &
     &'***** NON-FATAL DIAGNOSTIC--THE SECOND INPUT ARGUMENT TO THE DEFI&
     &NE SUBROUTINE HAS THE VALUE 1 *****')
         ENDIF
!
!-----START POINT-----------------------------------------------------
!
         DO i = 1 , N
            X(i) = Xnew
         ENDDO
!
!     WRITE OUT A BRIEF SUMMARY
!
         WRITE (ipr,99004)
99004    FORMAT (' ')
         WRITE (ipr,99005)
99005    FORMAT (' ','OUTPUT FROM THE DEFINE SUBROUTINE--')
         WRITE (ipr,99006) N
99006    FORMAT (' ',7X,'THE INPUT  NUMBER OF OBSERVATIONS  IS ',I6)
         WRITE (ipr,99007) Xnew
99007    FORMAT (' ',7X,'THE DEFINING CONSTANT IS ',E15.8)
      ENDIF
!
      END SUBROUTINE DEFINE
